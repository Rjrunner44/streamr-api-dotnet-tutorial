/* 
 * Streamr API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing UsersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UsersApiTests
    {
        private UsersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UsersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UsersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UsersApi
            //Assert.IsInstanceOfType(typeof(UsersApi), instance, "instance is a UsersApi");
        }

        
        /// <summary>
        /// Test UsersMeBalanceGet
        /// </summary>
        [Test]
        public void UsersMeBalanceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UsersMeBalanceGet();
            //Assert.IsInstanceOf<List<Balance>> (response, "response is List<Balance>");
        }
        
        /// <summary>
        /// Test UsersMeDelete
        /// </summary>
        [Test]
        public void UsersMeDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UsersMeDelete();
            
        }
        
        /// <summary>
        /// Test UsersMeGet
        /// </summary>
        [Test]
        public void UsersMeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UsersMeGet();
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test UsersMeImagePost
        /// </summary>
        [Test]
        public void UsersMeImagePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream _file = null;
            //var response = instance.UsersMeImagePost(_file);
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test UsersMeKeysGet
        /// </summary>
        [Test]
        public void UsersMeKeysGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UsersMeKeysGet();
            //Assert.IsInstanceOf<List<UserKey>> (response, "response is List<UserKey>");
        }
        
        /// <summary>
        /// Test UsersMeKeysIdPut
        /// </summary>
        [Test]
        public void UsersMeKeysIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateUserKeyRequest body = null;
            //string id = null;
            //instance.UsersMeKeysIdPut(body, id);
            
        }
        
        /// <summary>
        /// Test UsersMeKeysPost
        /// </summary>
        [Test]
        public void UsersMeKeysPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserKeyCreateRequest body = null;
            //var response = instance.UsersMeKeysPost(body);
            //Assert.IsInstanceOf<UserKey> (response, "response is UserKey");
        }
        
        /// <summary>
        /// Test UsersMePut
        /// </summary>
        [Test]
        public void UsersMePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UsersMePut();
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
        
    }

}
