/* 
 * Streamr API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Product&#39;s contact details
    /// </summary>
    [DataContract]
    public partial class ProductContact :  IEquatable<ProductContact>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductContact" /> class.
        /// </summary>
        /// <param name="email">Product&#39;s email addresss..</param>
        /// <param name="url">Product&#39;s url address for contact..</param>
        /// <param name="social1">Product&#39;s social media link 1..</param>
        /// <param name="social2">Product&#39;s social media link 2..</param>
        /// <param name="social3">Product&#39;s social media link 3..</param>
        /// <param name="social4">Product&#39;s social media link 4..</param>
        public ProductContact(string email = default(string), string url = default(string), string social1 = default(string), string social2 = default(string), string social3 = default(string), string social4 = default(string))
        {
            this.Email = email;
            this.Url = url;
            this.Social1 = social1;
            this.Social2 = social2;
            this.Social3 = social3;
            this.Social4 = social4;
        }
        
        /// <summary>
        /// Product&#39;s email addresss.
        /// </summary>
        /// <value>Product&#39;s email addresss.</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Product&#39;s url address for contact.
        /// </summary>
        /// <value>Product&#39;s url address for contact.</value>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Product&#39;s social media link 1.
        /// </summary>
        /// <value>Product&#39;s social media link 1.</value>
        [DataMember(Name="social1", EmitDefaultValue=false)]
        public string Social1 { get; set; }

        /// <summary>
        /// Product&#39;s social media link 2.
        /// </summary>
        /// <value>Product&#39;s social media link 2.</value>
        [DataMember(Name="social2", EmitDefaultValue=false)]
        public string Social2 { get; set; }

        /// <summary>
        /// Product&#39;s social media link 3.
        /// </summary>
        /// <value>Product&#39;s social media link 3.</value>
        [DataMember(Name="social3", EmitDefaultValue=false)]
        public string Social3 { get; set; }

        /// <summary>
        /// Product&#39;s social media link 4.
        /// </summary>
        /// <value>Product&#39;s social media link 4.</value>
        [DataMember(Name="social4", EmitDefaultValue=false)]
        public string Social4 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProductContact {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Social1: ").Append(Social1).Append("\n");
            sb.Append("  Social2: ").Append(Social2).Append("\n");
            sb.Append("  Social3: ").Append(Social3).Append("\n");
            sb.Append("  Social4: ").Append(Social4).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProductContact);
        }

        /// <summary>
        /// Returns true if ProductContact instances are equal
        /// </summary>
        /// <param name="input">Instance of ProductContact to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProductContact input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.Social1 == input.Social1 ||
                    (this.Social1 != null &&
                    this.Social1.Equals(input.Social1))
                ) && 
                (
                    this.Social2 == input.Social2 ||
                    (this.Social2 != null &&
                    this.Social2.Equals(input.Social2))
                ) && 
                (
                    this.Social3 == input.Social3 ||
                    (this.Social3 != null &&
                    this.Social3.Equals(input.Social3))
                ) && 
                (
                    this.Social4 == input.Social4 ||
                    (this.Social4 != null &&
                    this.Social4.Equals(input.Social4))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                if (this.Social1 != null)
                    hashCode = hashCode * 59 + this.Social1.GetHashCode();
                if (this.Social2 != null)
                    hashCode = hashCode * 59 + this.Social2.GetHashCode();
                if (this.Social3 != null)
                    hashCode = hashCode * 59 + this.Social3.GetHashCode();
                if (this.Social4 != null)
                    hashCode = hashCode * 59 + this.Social4.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Email (string) maxLength
            if(this.Email != null && this.Email.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Email, length must be less than 255.", new [] { "Email" });
            }

            // Url (string) maxLength
            if(this.Url != null && this.Url.Length > 2048)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Url, length must be less than 2048.", new [] { "Url" });
            }

            // Social1 (string) maxLength
            if(this.Social1 != null && this.Social1.Length > 2048)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Social1, length must be less than 2048.", new [] { "Social1" });
            }

            // Social2 (string) maxLength
            if(this.Social2 != null && this.Social2.Length > 2048)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Social2, length must be less than 2048.", new [] { "Social2" });
            }

            // Social3 (string) maxLength
            if(this.Social3 != null && this.Social3.Length > 2048)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Social3, length must be less than 2048.", new [] { "Social3" });
            }

            // Social4 (string) maxLength
            if(this.Social4 != null && this.Social4.Length > 2048)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Social4, length must be less than 2048.", new [] { "Social4" });
            }

            yield break;
        }
    }

}
