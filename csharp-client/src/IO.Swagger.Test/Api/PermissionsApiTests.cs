/* 
 * Streamr API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PermissionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PermissionsApiTests
    {
        private PermissionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PermissionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PermissionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PermissionsApi
            //Assert.IsInstanceOfType(typeof(PermissionsApi), instance, "instance is a PermissionsApi");
        }

        
        /// <summary>
        /// Test CanvasesIdPermissionsGet
        /// </summary>
        [Test]
        public void CanvasesIdPermissionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.CanvasesIdPermissionsGet(id);
            //Assert.IsInstanceOf<List<Permission>> (response, "response is List<Permission>");
        }
        
        /// <summary>
        /// Test CanvasesIdPermissionsPidDelete
        /// </summary>
        [Test]
        public void CanvasesIdPermissionsPidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? pid = null;
            //instance.CanvasesIdPermissionsPidDelete(id, pid);
            
        }
        
        /// <summary>
        /// Test CanvasesIdPermissionsPidGet
        /// </summary>
        [Test]
        public void CanvasesIdPermissionsPidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? pid = null;
            //var response = instance.CanvasesIdPermissionsPidGet(id, pid);
            //Assert.IsInstanceOf<Permission> (response, "response is Permission");
        }
        
        /// <summary>
        /// Test CanvasesIdPermissionsPost
        /// </summary>
        [Test]
        public void CanvasesIdPermissionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Permission body = null;
            //var response = instance.CanvasesIdPermissionsPost(id, body);
            //Assert.IsInstanceOf<Permission> (response, "response is Permission");
        }
        
        /// <summary>
        /// Test StreamsIdPermissionsGet
        /// </summary>
        [Test]
        public void StreamsIdPermissionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.StreamsIdPermissionsGet(id);
            //Assert.IsInstanceOf<List<Permission>> (response, "response is List<Permission>");
        }
        
        /// <summary>
        /// Test StreamsIdPermissionsPidDelete
        /// </summary>
        [Test]
        public void StreamsIdPermissionsPidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? pid = null;
            //instance.StreamsIdPermissionsPidDelete(id, pid);
            
        }
        
        /// <summary>
        /// Test StreamsIdPermissionsPidGet
        /// </summary>
        [Test]
        public void StreamsIdPermissionsPidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? pid = null;
            //var response = instance.StreamsIdPermissionsPidGet(id, pid);
            //Assert.IsInstanceOf<Permission> (response, "response is Permission");
        }
        
        /// <summary>
        /// Test StreamsIdPermissionsPost
        /// </summary>
        [Test]
        public void StreamsIdPermissionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Permission body = null;
            //var response = instance.StreamsIdPermissionsPost(id, body);
            //Assert.IsInstanceOf<Permission> (response, "response is Permission");
        }
        
    }

}
